generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique
  phone         String?   @unique
  role          Role      @default(NORMAL)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  skills   Skill[]
  gigs     Gig[]
}

model Skill {
  id String @id @default(cuid())

  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
  technology   Technology? @relation(fields: [technologyId], references: [id], onDelete: Cascade)
  technologyId String?

  @@index([userId])
  @@index([technologyId])
}

model Technology {
  id   String @id @default(cuid())
  name String
  logo String

  skills Skill[]
}

model Gig {
  id          String @id @default(cuid())
  title       String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

enum Role {
  ADMINISTRATOR
  FREELANCER
  NORMAL
}
